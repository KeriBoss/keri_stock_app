// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'stock.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Stock _$StockFromJson(Map<String, dynamic> json) => Stock(
      (json['avgPrice'] as num?)?.toDouble(),
      (json['best1Bid'] as num?)?.toDouble(),
      (json['best1BidVol'] as num?)?.toDouble(),
      (json['best1Offer'] as num?)?.toDouble(),
      (json['best1OfferVol'] as num?)?.toDouble(),
      (json['best2Bid'] as num?)?.toDouble(),
      (json['best2BidVol'] as num?)?.toDouble(),
      (json['best2Offer'] as num?)?.toDouble(),
      (json['best2OfferVol'] as num?)?.toDouble(),
      (json['best3Bid'] as num?)?.toDouble(),
      (json['best3BidVol'] as num?)?.toDouble(),
      (json['best3Offer'] as num?)?.toDouble(),
      (json['best3OfferVol'] as num?)?.toDouble(),
      (json['ceiling'] as num?)?.toDouble(),
      (json['corporateEvents'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      json['coveredWarrantType'] as String?,
      json['exchange'] as String?,
      (json['exercisePrice'] as num?)?.toDouble(),
      json['exerciseRatio'] as String?,
      (json['floor'] as num?)?.toDouble(),
      (json['highest'] as num?)?.toDouble(),
      json['issuerName'] as String?,
      json['lastTradingDate'] as String?,
      (json['lastVol'] as num?)?.toDouble(),
      (json['lowest'] as num?)?.toDouble(),
      (json['matchedPrice'] as num?)?.toDouble(),
      json['maturityDate'] as String?,
      (json['nmTotalTradedValue'] as num?)?.toDouble(),
      (json['openPrice'] as num?)?.toDouble(),
      (json['priorClosePrice'] as num?)?.toDouble(),
      (json['refPrice'] as num?)?.toDouble(),
      json['securityName'] as String?,
      json['stockSymbol'] as String?,
      json['stockType'] as String?,
      (json['totalShare'] as num?)?.toDouble(),
      json['tradingStatus'] as String?,
      (json['tradingUnit'] as num?)?.toDouble(),
      json['underlyingSymbol'] as String?,
      json['companyNameEn'] as String?,
      json['companyNameVi'] as String?,
      json['oddSession'] as String?,
      json['buyForeignQtty'] as int?,
      json['remainForeignQtty'] as int?,
      json['sellForeignQtty'] as int?,
      json['matchedVolume'] as int?,
      (json['priceChange'] as num?)?.toDouble(),
      (json['lastMatchedPrice'] as num?)?.toDouble(),
      (json['lastMatchedVolume'] as num?)?.toDouble(),
      (json['lastPriceChange'] as num?)?.toDouble(),
      (json['lastPriceChangePercent'] as num?)?.toDouble(),
      json['nmTotalTradedQty'] as int?,
    );

Map<String, dynamic> _$StockToJson(Stock instance) => <String, dynamic>{
      'avgPrice': instance.avgPrice,
      'best1Bid': instance.best1Bid,
      'best1BidVol': instance.best1BidVol,
      'best1Offer': instance.best1Offer,
      'best1OfferVol': instance.best1OfferVol,
      'best2Bid': instance.best2Bid,
      'best2BidVol': instance.best2BidVol,
      'best2Offer': instance.best2Offer,
      'best2OfferVol': instance.best2OfferVol,
      'best3Bid': instance.best3Bid,
      'best3BidVol': instance.best3BidVol,
      'best3Offer': instance.best3Offer,
      'best3OfferVol': instance.best3OfferVol,
      'ceiling': instance.ceiling,
      'corporateEvents': instance.corporateEvents,
      'coveredWarrantType': instance.coveredWarrantType,
      'exchange': instance.exchange,
      'exercisePrice': instance.exercisePrice,
      'exerciseRatio': instance.exerciseRatio,
      'floor': instance.floor,
      'highest': instance.highest,
      'issuerName': instance.issuerName,
      'lastTradingDate': instance.lastTradingDate,
      'lastVol': instance.lastVol,
      'lowest': instance.lowest,
      'matchedPrice': instance.matchedPrice,
      'maturityDate': instance.maturityDate,
      'nmTotalTradedValue': instance.nmTotalTradedValue,
      'openPrice': instance.openPrice,
      'priorClosePrice': instance.priorClosePrice,
      'refPrice': instance.refPrice,
      'securityName': instance.securityName,
      'stockSymbol': instance.stockSymbol,
      'stockType': instance.stockType,
      'totalShare': instance.totalShare,
      'tradingStatus': instance.tradingStatus,
      'tradingUnit': instance.tradingUnit,
      'underlyingSymbol': instance.underlyingSymbol,
      'companyNameEn': instance.companyNameEn,
      'companyNameVi': instance.companyNameVi,
      'oddSession': instance.oddSession,
      'buyForeignQtty': instance.buyForeignQtty,
      'remainForeignQtty': instance.remainForeignQtty,
      'sellForeignQtty': instance.sellForeignQtty,
      'matchedVolume': instance.matchedVolume,
      'priceChange': instance.priceChange,
      'lastMatchedPrice': instance.lastMatchedPrice,
      'lastMatchedVolume': instance.lastMatchedVolume,
      'lastPriceChange': instance.lastPriceChange,
      'lastPriceChangePercent': instance.lastPriceChangePercent,
      'nmTotalTradedQty': instance.nmTotalTradedQty,
    };
